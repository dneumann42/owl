archimedes := " ~___~  Owl (0.0.0-dev)
 {O,o}  enter ',h' for help screen
/)___)  or '?' for list of repl commands
  ' '"

fun command(key, description, call)
  { 
    key: key, 
    description: description, 
    call: call 
  }
end

done := false
history := []

fun help()
  for i in range(0, len(commands) - 1) do
    cmd := nth(commands, i)
    write(cmd.key, "\t", cmd.description, "\n")
  end
end

commands := [
  command("?", "Displays the help menu", help),
  command(
    ",q", 
    "Quits the read eval print loop",
    fn() done = true
  ),
  command(
    ",h", 
    "Displays command history",
    fn() echo(history)
  ),
  command(
    ",e", 
    "Open editor",
    fn() echo("WIP")
  ),
  command(
    ",n", 
    "New menu",
    fn() echo("WIP")
  ),
  command(
    ",p", 
    "Packages menu",
    fn() echo("WIP")
  ),
]

fun repl()
  while not done do
    line := read-line("> ")

    is-command := false
    for i in range(0, len(commands) - 1) do
      cmd := nth(commands, i)
      if cmd.key eq line then
        cmd.call()
        is-command = true
      end
    end

    if not is-command then 
      write(eval(line), "\n")
    end

    list-add(history, line)
  end

  write("bye.\n")
end

write(archimedes, "\n")
repl()
